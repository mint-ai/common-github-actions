name: Build and upload

on:
  workflow_call:
    inputs:
      registry:
        required: true
        type: string
      repository:
        required: true
        type: string
      # aws-role:
      #   required: true
      #   type: string
      aws-region:
        required: true
        type: string
      sonarqube:
        required: true
        type: boolean


permissions:
  id-token: write
  contents: read

jobs:
  build-upload:
    name: Build and upload new artifact

    runs-on: ubuntu-latest

    env:
      REGISTRY: ${{ inputs.registry }}
      REPOSITORY: ${{ inputs.repository }}
      AWS_ROLE: ${{ secrets.AWS_ROLE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set IMAGE_NAME
        run: |
          GIT_SHORT_REV=$(git rev-parse --short HEAD)
          echo "IMAGE_NAME=$REGISTRY/$REPOSITORY:$GIT_SHORT_REV" >> $GITHUB_ENV
          echo $AWS_ROLE
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ inputs.aws-region }}
          role-to-assume: $AWS_ROLE

      - uses: docker/build-push-action@v2
        with:
          context: .
          build-args: POETRY_HTTP_BASIC_CODEARTIFACT_PASSWORD=${{ steps.codeartifact-password-generator.outputs.codeartifact_password }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.IMAGE_NAME }}
          load: true

      - name: Sonarqube
        if: ${{ inputs.sonarqube }}
        uses: sonarsource/sonarqube-scan-action@master
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push ${{ env.IMAGE_NAME }} to Amazon ECR
        run: docker push ${{ env.IMAGE_NAME }}