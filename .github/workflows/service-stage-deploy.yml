name: Deploy on stage

on:
  workflow_call:
    inputs:
      job:
        required: true
        type: string

jobs:
  stage-deploy:
    name: Deploy on stage

    runs-on: ubuntu-latest

    env:
      JOB: ${{ inputs.job }}
      STACK: test

    steps:
      - name: Exit if build failed
        if: ${{ github.event.workflow_run.conclusion == 'failure' }}
        run: exit 1

      - name: Checkout service
        uses: actions/checkout@v3
        with:
          path: service

      - name: Set VERSION
        working-directory: service
        run: echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Checkout apps
        uses: actions/checkout@v3
        with:
          repository: mint-ai/apps
          ssh-key: ${{ secrets.APPS_SSH_KEY }}
          ref: master
          path: apps

      - name: Update jobs
        working-directory: apps/
        run: |
          if [ "${{ env.STACK }}" = "test" ]; then
            WORKING_DIR="envs/${{ env.STACK }}/base-tests"
          else
            WORKING_DIR="envs/${{ env.STACK }}"
          fi
          sed -Ei "s/(- ${{ env.JOB }}_ver)\s*=.*/\1=${{ env.VERSION }}/" $WORKING_DIR/kustomization.yaml
          git config user.email deploy-bot@mint.ai
          git config user.name "Deploy bot"
          git commit $WORKING_DIR/kustomization.yaml -m "[${{ env.STACK }}] ${{ env.JOB }}: ${{ env.VERSION }}" || COMMITED=$?
          if [[ $COMMITED -eq 0 ]]; then git push; fi

      - name: Sync ArgoCD Application
        uses: omegion/argocd-actions@v1
        with:
          address: ${{ secrets.ARGOCD_SERVER }}
          token: ${{ secrets.ARGOCD_AUTH_TOKEN }}
          action: sync
          appName: "apps"